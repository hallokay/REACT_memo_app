{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NoteList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDelNote","className","size","onClick","AddNote","handleAddNote","useState","noteText","setNoteText","name","cols","rows","placeholder","value","onChange","e","target","length","trim","NoteList","notes","map","note","Search","handelSearch","type","Header","darkMode","mode","App","setNotes","searchText","setSearchText","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","nanoid","toLocaleDateString","newNotes","delNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8555dfcc.chunk.js","sourcesContent":["import React from 'react';\r\nimport {MdDeleteForever} from 'react-icons/md';\r\n\r\nconst Note = ({ id, text, date, handleDelNote }) => {\r\n  return (\r\n    <div className=\"note\">\r\n      <p> {text} </p>\r\n      <div className=\"note_footer\">\r\n        <small>{date}</small>\r\n        <MdDeleteForever\r\n          className=\"del_icon\"\r\n          size=\"1.3rem\"\r\n          onClick={() => handleDelNote(id)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddNote = ({ handleAddNote }) => {\r\n  const [noteText, setNoteText] = useState(\"\");\r\n  const charcterLimit = 500;\r\n\r\n  const onChange = (e) => {\r\n      const value = e.target.value;\r\n    //   만약 리밋이 넘으면 못치게 하는거\r\n    // 남은 글자가 더 0보다 클때 벨류를 받고 아니면 안받음\r\n    if(charcterLimit - value.length >= 0 ) {\r\n        setNoteText(value);\r\n    }\r\n  };\r\n\r\n  const onClick = () => {\r\n    //   공백일떄는 제출이 안됨\r\n    if(noteText.trim().length > 0){\r\n        handleAddNote(noteText);\r\n\r\n        // 입력 후에는 빈칸으로 만들어줌\r\n        setNoteText('');\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"note new\">\r\n      <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        cols=\"10\"\r\n        rows=\"8\"\r\n        placeholder=\"메모를 입력하세요\"\r\n        value={noteText}\r\n        onChange={onChange}\r\n      ></textarea>\r\n      <div className=\"note_footer\">\r\n        <small>{charcterLimit - noteText.length} Remaining</small>\r\n        <button className=\"save\" onClick={onClick}>\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNote;\r\n","import React from \"react\";\r\nimport Note from \"./Note\";\r\nimport AddNote from \"./AddNote\";\r\n\r\nconst NoteList = ({ notes, handleAddNote, handleDelNote }) => {\r\n  return (\r\n    <div className=\"notes_list\">\r\n      <AddNote handleAddNote={handleAddNote} />\r\n      {notes.map((note) => (\r\n        <Note key={note.id} \r\n        id={note.id} \r\n        text={note.text} \r\n        date={note.date} \r\n        handleDelNote={handleDelNote}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import React from 'react'\r\nimport { MdSearch } from 'react-icons/md'\r\n\r\nconst Search = ({ handelSearch }) => {\r\n  return (\r\n    <div className=\"search\">\r\n      <MdSearch className=\"search_icon\" size=\"1.3rem\" />\r\n      <input onChange={e => handelSearch(e.target.value)} \r\n      type=\"text\" \r\n      placeholder=\"search\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search\r\n","import React from \"react\";\r\n\r\nconst Header = ({ darkMode }) => {\r\n  const toggleDark = () => {\r\n    darkMode((mode) => !mode);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Notes</h1>\r\n      <button className=\"save\" onClick={toggleDark}>\r\n        Toggle Mode\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport NoteList from \"./components/NoteList\";\nimport { nanoid } from \"nanoid\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n\n    useEffect(() => {\n      const savedNotes = JSON.parse(\n        localStorage.getItem(\"note_data\")\n        );\n        if(savedNotes) {\n          setNotes(savedNotes)\n        }\n    }, []);\n\n  useEffect(() => {\n    localStorage.setItem('note_data', JSON.stringify(notes));\n  \n  }, [notes]);\n\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text,\n      date: date.toLocaleDateString(),\n    };\n\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const delNote = (id) => {\n    const delNotes = notes.filter((note) => note.id !== id);\n    setNotes(delNotes);\n  };\n\n  return (\n    <div className={`App ${darkMode ? \"dark_mode\" : \"\"}`}>\n      <Header darkMode={setDarkMode} />\n      <Search handelSearch={setSearchText} />\n\n      <NoteList\n        notes={notes.filter((note) =>\n          note.text.toLowerCase().includes(searchText)\n        )}\n        handleAddNote={addNote}\n        handleDelNote={delNote}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}